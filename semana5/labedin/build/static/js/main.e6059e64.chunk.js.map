{"version":3,"sources":["components/CardGrande/CardGrande.js","components/ImagemButton/ImagemButton.js","components/CardPequeno/CardPequeno.js","App.js","serviceWorker.js","index.js"],"names":["CardGrande","props","className","src","imagem","nome","descricao","ImagemButton","texto","CardPequeno","tipo","conteudo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAeeA,MAZf,SAAoBC,GAChB,OACI,yBAAKC,UAAU,qBACX,yBAAKC,IAAMF,EAAMG,SACjB,6BACI,4BAAMH,EAAMI,MACZ,2BAAKJ,EAAMK,c,MCIZC,MAVf,SAAsBN,GAClB,OACI,yBAAKC,UAAU,0BACX,yBAAKC,IAAMF,EAAMG,SACjB,2BAAKH,EAAMO,S,MCJhB,SAASC,EAAYR,GACxB,OACI,yBAAKC,UAAW,oBACZ,yBAAKC,IAAMF,EAAMG,SACjB,2BAAG,gCAASH,EAAMS,KAAf,KAAH,IAAmCT,EAAMU,WCkFtCC,MAnFf,WACE,OACE,yBAAKV,UAAU,OACb,yBAAKA,UAAU,0BACb,8CACA,kBAAC,EAAD,CACEE,OAAO,0UACPC,KAAK,cACLC,UAAU,sLAGZ,kBAAC,EAAD,CACEF,OAAO,0DACPI,MAAM,cAIV,yBAAKN,UAAU,0BACb,kBAAC,EAAD,CACEQ,KAAM,SACNN,OAAQ,yEACRO,SAAU,6BAGZ,kBAAC,EAAD,CACED,KAAM,cACNN,OAAQ,wDACRO,SAAU,uBAId,yBAAKT,UAAU,0BACb,6DACA,kBAAC,EAAD,CACEE,OAAO,6FACPC,KAAK,SACLC,UAAU,yDAGZ,kBAAC,EAAD,CACEF,OAAO,0UACPC,KAAK,UACLC,UAAU,oBAId,yBAAKJ,UAAU,0BACb,6CACA,kBAAC,EAAD,CACEE,OAAO,+EACPC,KAAK,OACLC,UAAU,2BAGZ,kBAAC,EAAD,CACEF,OAAO,sHACPC,KAAK,MACLC,UAAU,2BAGZ,kBAAC,EAAD,CACEF,OAAO,sHACPC,KAAK,aACLC,UAAU,4BAId,yBAAKJ,UAAU,0BACb,oDACA,kBAAC,EAAD,CACEE,OAAO,sFACPI,MAAM,aAGR,kBAAC,EAAD,CACEJ,OAAO,2EACPI,MAAM,eCtEIK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e6059e64.chunk.js","sourcesContent":["import React from 'react';\nimport './CardGrande.css'\n\nfunction CardGrande(props) {\n    return (\n        <div className=\"bigcard-container\">\n            <img src={ props.imagem } />\n            <div>\n                <h4>{ props.nome }</h4>\n                <p>{ props.descricao }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CardGrande;","import React from 'react';\nimport './ImagemButton.css'\n\nfunction ImagemButton(props) {\n    return (\n        <div className=\"image-button-container\">\n            <img src={ props.imagem }/>\n            <p>{ props.texto }</p>\n        </div>\n\n    )\n}\n\nexport default ImagemButton;","import React from 'react';\r\nimport './CardPequeno.css';\r\n\r\nexport function CardPequeno(props) {\r\n    return (\r\n        <div className={\"little-container\"}>\r\n            <img src={ props.imagem } />\r\n            <p><strong>{props.tipo}:</strong> {props.conteudo}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport CardGrande from './components/CardGrande/CardGrande';\nimport ImagemButton from './components/ImagemButton/ImagemButton';\nimport { CardPequeno } from './components/CardPequeno/CardPequeno';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"page-section-container\">\n        <h2>Dados pessoais</h2>\n        <CardGrande \n          imagem=\"https://scontent.fthe2-1.fna.fbcdn.net/v/t1.0-9/61407896_616319382181818_8229306206997446656_n.jpg?_nc_cat=106&_nc_sid=7aed08&_nc_eui2=AeElVvl9p9WlPd-QFYOmbQd-iyBA4yyH-UyLIEDjLIf5TB6eQRNZ19iGnWcABOY6dug10MzxGLvJQKX5XU_9reHh&_nc_ohc=nrMsoExO5MMAX-SIamt&_nc_ht=scontent.fthe2-1.fna&oh=1a561c09049afedcbb5cc550c56b5f49&oe=5EBAC4BD\" \n          nome=\"Jerry Jones\" \n          descricao=\"Oi, eu sou o Jerry Jones. Sou o aluno da Turma Julian na Labenu. Me amarro em codar e sou Dev Web em formação. O React é lindo, não é?! Pois é. Avante, Julian!\"\n        />\n        \n        <ImagemButton \n          imagem=\"https://image.flaticon.com/icons/png/512/117/117472.png\" \n          texto=\"Ver mais\"\n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <CardPequeno\n          tipo={\"E-mail\"}\n          imagem={\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-email-512.png\"}\n          conteudo={\"jerry@turmajulian.com.br\"}\n        />\n\n        <CardPequeno\n          tipo={\"Endereço\"}\n          imagem={\"https://image.flaticon.com/icons/svg/1239/1239525.svg\"}\n          conteudo={\"Rua da Passagem 7\"}\n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Experiências profissionais</h2>\n        <CardGrande \n          imagem=\"https://s3.amazonaws.com/future4.com.br/static/headf4-c492117ca2373dc85ca81bf715b3dc2a.png\" \n          nome=\"Labenu\" \n          descricao=\"Formando desenvolvedores para o mercado de trabalho!\" \n        />\n        \n        <CardGrande \n          imagem=\"https://scontent.fthe2-1.fna.fbcdn.net/v/t1.0-9/42205411_263879900904610_6255291769777291264_n.png?_nc_cat=101&_nc_sid=85a577&_nc_eui2=AeGbquGX8F6525KF3Kfp4fcYQ0rslUiXjD9DSuyVSJeMP9Hrnaybqzu7lQvZBeDFF-5lmUnl66MZ5gavmExCH-KA&_nc_ohc=GWGn2BGAptcAX9Kp3qf&_nc_ht=scontent.fthe2-1.fna&oh=28e982917e883b8ec509966500cca00c&oe=5EBA2C16\" \n          nome=\"365.be!\" \n          descricao=\"Estágio Web\" \n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Conhecimentos</h2>\n        <CardGrande \n          imagem=\"https://icons.iconarchive.com/icons/iconsmind/outline/512/File-HTML-icon.png\" \n          nome=\"HTML\" \n          descricao=\"Conhecimento Básico\" \n        />\n        \n        <CardGrande \n          imagem=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSlguA4hBFR5PaTB6H-FPTuHyixqPjqxAl0A_gNuLFPg1bxAe0h&usqp=CAU\" \n          nome=\"CSS\" \n          descricao=\"Conhecimento Básico\" \n        />\n\n        <CardGrande \n          imagem=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQifuIcxjLgdujgDtS9Dwep6hsHtujEu4S4NvOSfcPdcmR-2k-l&usqp=CAU\" \n          nome=\"JavaScript\" \n          descricao=\"Conhecimento Básico\" \n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Minhas redes sociais</h2>\n        <ImagemButton \n          imagem=\"https://d2v9ipibika81v.cloudfront.net/uploads/sites/261/2017/01/facebook-logo-3.png\" \n          texto=\"Facebook\" \n        />        \n\n        <ImagemButton \n          imagem=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-1-1.png\" \n          texto=\"Twitter\" \n        />        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}